name: build

on:
  push:
    branches: [ main ]

jobs:

  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
      
    - name: Install Pre-reqs
      if: matrix.os  == 'ubuntu-latest'
      run: sudo apt-get install libcups2-dev python3-dev gcc python3-setuptools

    - name: Install Python poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
        virtualenvs-path: .venv

    - name: Activate shell
      shell: bash
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: eval $(poetry env activate)

    - name: Activate shell (windows)
      shell: bash
      if: matrix.os == 'windows-latest'
      run: eval . $(poetry env activate)

    - name: Install dependencies
      shell: bash
      run: poetry install --no-interaction

    - name: Install pyinstaller plugin
      shell: bash
      run: poetry self add poetry-pyinstaller-plugin

    - name: Create Executable
      shell: bash
      run: poetry build

    - name: Upload Executable
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-artifact
        path: dist/*